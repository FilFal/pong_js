<!DOCTYPE html>
<html>

<head>
    <link rel="stylesheet" href="style.css">
    <script>
        // Var globali
        document.addEventListener("DOMContentLoaded", init, false); // carica il JS solo quando tutto il contenuto ha finito di caricare
        function init() {
            var canvas = document.getElementById('gameArea');
            var ctx = canvas.getContext('2d');
            const HEIGHT = 500;						// Altezza Canvas
            const WIDTH = 700;						// Larghezza Canvas
            const PADDLE1_VY = 2;					// Velocità paddle 1
            var raf;								// Animazione
            var enemyVelocity = 1;					// Velocità del nemico
            var ongoingRound = false;				// Round in corso
            var running = true;						// In esecuzione
            var pauseToggle = false;				// In pausa	
			var gameOver = false;					// Gioco finito
            var punti1 = 0;							// Punti giocatore		1 = Giocatore
            var punti2 = 0;							// Punti AI				2 = AI
            drawText();								// 'Premere qualsiasi tasto per cominciare'
            // tasto premuto
            var key = "N/A";
            document.addEventListener('keydown', function key(e) {
                var key = `${e.code}`
                if (!ongoingRound)
                    start();
                if (key == "KeyW" || key == 'ArrowUp') {
                    paddle1.vy = -PADDLE1_VY;
                }
                else if (key == "KeyS" || key == 'ArrowDown') {
                    paddle1.vy = PADDLE1_VY;
                }

                if (key == "Escape") {
                    running = !running;
                    pauseToggle = !pauseToggle;
                }
            });               // listener per aver premuto un tasto di tastiera

            document.addEventListener('keyup', function key(e) {
                var key = `${e.code}`
                if (key == "KeyW" || key == 'ArrowUp')
                    paddle1.vy = 0;
                else if (key == "KeyS" || key == 'ArrowDown')
                    paddle1.vy = 0;
            });
            
			// Palla
            var ball = {
                x: 100,                         // posizione x iniziale
                y: 100,                         // posizione y iniziale
                vx: 2,                          // velocità asse x
                vy: 2,                          // velocità asse y
                radius: 5,                      // raggio
                color: 'rgba(255,255,255,1)',   // colore
                // disegna palla
                draw: function () {
                    ctx.beginPath();
                    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true);
                    ctx.closePath();
                    ctx.fillStyle = this.color;
                    ctx.fill();
                }
            }
			
			// Paddle giocatore
            var paddle1 = {
                x: 50,							// Asse X
                y: Math.floor(HEIGHT / 2),		// Asse Y
                height: 50,						// Altezza
                width: 10,						// Larghezza
                vy: 0,							// Velocità
                color: 'rgba(255,255,255,1)',	// Colore
                // disegna paddle
                draw: function () {
                    ctx.beginPath();
                    ctx.fillStyle = this.color;
                    ctx.fillRect(this.x, this.y, this.width, this.height);
                    ctx.closePath();
                }
            }
			
			// Paddle AI
            var paddle2 = {
                x: WIDTH - 60,
                y: Math.floor(HEIGHT / 2),
                height: 50,
                width: 10,
                vy: 0,
                color: 'rgba(255,255,255,1)',
                // disegna paddle
                draw: function () {
                    ctx.beginPath();
                    ctx.fillStyle = this.color;
                    ctx.fillRect(this.x, this.y, this.width, this.height);
                    ctx.closePath();
                }
            }
            function start() {
                ball.x = Math.floor(WIDTH / 2);			// Centra palla su asse X
                ball.y = Math.floor(HEIGHT / 2);		// Centra palla su asse Y
                var dir1 = Math.floor(Math.random());	// Direzione randomica asse X
                var dir2 = Math.floor(Math.random());	// Direzione randomica asse Y
                // Inverti velocità palla dove necessario
				if (dir1 = 1)
                    ball.vy = -ball.vy;
                if (dir2 = 1)
                    ball.vx = -ball.vx;
                ongoingRound = true;
                raf = window.requestAnimationFrame(draw);
            }

            function draw() {
                if (running && !gameOver) {
                    ctx.clearRect(0, 0, WIDTH, HEIGHT);             // clear canvas
                    ball.draw();                                    // disegna la palla
                    drawLine();										// disegna linea tratteggiata
                    paddle1.draw();                                 // disegna paddle 1
                    paddle2.draw();                                 // disegna paddle 2
                    ball.x += ball.vx;                              // vel palla ass x
                    ball.y += ball.vy;                              // vel palla ass y
                    paddleCollisionHandler();						// collisioni paddle e boundary
                    paddle1.y += paddle1.vy;                        // vel paddle 1 ass y
                    paddle2.y += paddle2.vy;                        // vel paddle 2 ass y
                    paddle2AI();									// gestione paddle AI
                    paddleCollision();								// gestione collisioni
                    drawPunti();									// disegna punti1
					// Collisioni palla e boundary
                    if (ball.y + ball.vy > HEIGHT - ball.radius || ball.y + ball.vy < 0 + ball.radius)
                        ball.vy = -ball.vy;
                    if (ball.x > WIDTH - ball.radius)
                        endGame(0);
                    else if (ball.x < 0 + ball.radius)
                        endGame(1);
                } else {
					// pausa
                    if (pauseToggle)
                        drawPauseScreen();
                }
                raf = window.requestAnimationFrame(draw);
            }
		
            function paddleCollisionHandler() {
                // collisioni paddle 1 e boundary
                if (paddle1.y + paddle1.vy <= 0)
                    paddle1.vy = 0;
                else if (paddle1.y + paddle1.vy + paddle1.height >= HEIGHT) {
                    paddle1.vy = 0;
                }
                // collisioni paddle 2 e boundary
                if (paddle2.y + paddle2.vy <= 0)
                    paddle2.vy = 0;
                else if (paddle2.y + paddle2.vy + paddle2.height >= HEIGHT) {
                    paddle2.vy = 0;
                }
            }

            function endGame(condition) {
                // 1 = perdita
                // 0 = vittoria
                if (condition == 1) {
                    window.cancelAnimationFrame(raf);
                    running = false;
                    enemyVelocity + 1;
                    punti2++;
                    if (punti2 == 5)
                        lose();
                    restart();
                } else {
                    window.cancelAnimationFrame(raf);
                    running = false;
                    enemyVelocity + 1;
                    punti1++;
                    if (punti1 == 5)
                        win();
                    restart();
                }
            }
			
            function win() {
				gameOver = true;
				ctx.beginPath();
                ctx.fillStyle = 'rgba(255,255,255,1)';
                ctx.fillRect((WIDTH / 2) - 127, (HEIGHT / 2) - 24, 254, 34);
                ctx.closePath();
                ctx.beginPath();
                ctx.fillStyle = 'rgba(0,0,0,1)';
                ctx.fillRect((WIDTH / 2) - 125, (HEIGHT / 2) - 22, 250, 30);
                ctx.closePath();
				ctx.fillStyle = 'rgba(255,255,255,1)';
                ctx.font = '20px arial';
				ctx.textAlign = 'center';
                ctx.fillText('Hai vinto!', WIDTH / 2, HEIGHT / 2);
            }

            function lose() {
				gameOver = true;
				ctx.beginPath();
                ctx.fillStyle = 'rgba(255,255,255,1)';
                ctx.fillRect((WIDTH / 2) - 127, (HEIGHT / 2) - 24, 254, 34);
                ctx.closePath();
                ctx.beginPath();
                ctx.fillStyle = 'rgba(0,0,0,1)';
                ctx.fillRect((WIDTH / 2) - 125, (HEIGHT / 2) - 22, 250, 30);
                ctx.closePath();
				ctx.fillStyle = 'rgba(255,255,255,1)';
                ctx.font = '20px arial';
				ctx.textAlign = 'center';
                ctx.fillText('Hai perso!', WIDTH / 2, HEIGHT / 2);
            }

            function restart() {
                running = true;
                ongoingRound = false;
                start();
            }

            function paddleCollision() {
                if (((ball.x - ball.radius + ball.vx < paddle1.x + paddle1.width && ball.x - ball.radius + ball.vx > paddle1.x) && (ball.y - ball.radius + ball.vy < paddle1.y + paddle1.height + paddle1.vy && ball.y - ball.radius + ball.vy > paddle1.y + paddle1.vy)) || ((ball.x + ball.radius + ball.vx < paddle2.x + paddle2.width && ball.x + ball.vx + ball.radius > paddle2.x) && (ball.y + ball.vy + ball.radius < paddle2.y + paddle2.height + paddle2.vy && ball.y + ball.radius + ball.vy > paddle2.y + paddle2.vy))) {
                    ball.vx = -ball.vx;
                }
            }

            function paddle2AI() {
			// Centra il paddle verso la palla
                if (paddle2.y + paddle2.width / 2 < ball.y)
                    paddle2.vy = enemyVelocity;
                if (paddle2.y + paddle2.width / 2 > ball.y)
                    paddle2.vy = -enemyVelocity;
                if (paddle2.y + paddle2.width / 2 == ball.y)
                    paddle2.vy = 0;
            }

            function drawLine() {
                ctx.lineWidth = 2;
                ctx.strokeStyle = 'rgba(255,255,255,1)';
                ctx.setLineDash([10, 10]);
                ctx.beginPath();
                ctx.moveTo(Math.floor(WIDTH / 2), 0);
                ctx.lineTo(Math.floor(WIDTH / 2), HEIGHT);
                ctx.stroke();
            }

            function drawText() {
                ctx.fillStyle = 'rgba(255,255,255,1)';
                ctx.font = '20px arial';
                ctx.textAlign = 'center';
                ctx.fillText('premere qualsiasi tasto per iniziare', WIDTH / 2, HEIGHT / 2);
            }

            function drawPauseScreen() {
                ctx.beginPath();
                ctx.fillStyle = 'rgba(255,255,255,1)';
                ctx.fillRect((WIDTH / 2) - 127, (HEIGHT / 2) - 24, 254, 34);
                ctx.closePath();
                ctx.beginPath();
                ctx.fillStyle = 'rgba(0,0,0,1)';
                ctx.fillRect((WIDTH / 2) - 125, (HEIGHT / 2) - 22, 250, 30);
                ctx.closePath();
                ctx.fillStyle = 'rgba(255,255,255,1)';
                ctx.font = '20px arial';
                ctx.textAlign = 'center';
                ctx.fillText('Gioco messo in pausa', WIDTH / 2, HEIGHT / 2);
                pauseToggle = true;
            }

            function drawPunti(){
                // Punti paddle 1
                ctx.fillStyle = 'rgba(255,255,255,1)';
                ctx.font = '20px arial';
                ctx.fillText(punti1, 20, 30);

                // Punti paddle 2
                ctx.fillStyle = 'rgba(255,255,255,1)';
                ctx.font = '20px arial';
                ctx.fillText(punti2, WIDTH-20, 30);
            }
        }
    </script>
</head>

<body>
    <center><p class="title"><b>PONG CON JAVASCRIPT</b></p></center>
    <center><canvas id="gameArea" width="700" height="500" class="borderStyles"></canvas></center>
    <center><p class="credits">Thanks to ...</p></center><br>
    <p class="controls">
        Controlli:<br>
        W / Freccia sù<br>
        S / Freccia giù<br>
        ESC - Metti in pausa<br>
    </p>
</body>

</html>